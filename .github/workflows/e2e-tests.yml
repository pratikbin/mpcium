name: E2E Integration Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  GO_VERSION: "1.23"
  DOCKER_BUILDKIT: 1

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod tidy
      - id: cache-key
        run: echo "key=${{ runner.os }}-binaries-${{ hashFiles('**/go.sum', '**/*.go') }}" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: cache-binaries
        with:
          path: |
            ./mpcium
            ./mpcium-cli
          key: ${{ steps.cache-key.outputs.key }}
      - uses: actions/cache@v3
        if: steps.cache-binaries.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - if: steps.cache-binaries.outputs.cache-hit != 'true'
        run: go mod download && cd e2e && go mod download
      - if: steps.cache-binaries.outputs.cache-hit != 'true'
        run: |
          go build -o mpcium ./cmd/mpcium
          go build -o mpcium-cli ./cmd/mpcium-cli
          chmod +x mpcium mpcium-cli

  e2e:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        testcase: [TestKeyGeneration, TestSigning, TestResharing]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod tidy
      - uses: docker/setup-buildx-action@v3
      - run: docker --version && docker compose version
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - uses: actions/cache@v3
        with:
          path: |
            ./mpcium
            ./mpcium-cli
          key: ${{ needs.build.outputs.cache-key }}
      - run: sudo mv mpcium /usr/local/bin/ && sudo mv mpcium-cli /usr/local/bin/
      - run: which mpcium && which mpcium-cli
      - run: cd e2e && go mod tidy && go mod download
      - name: Run ${{ matrix.testcase }} E2E tests
        run: |
          cd e2e
          go test -v -timeout=1200s -run ${{ matrix.testcase }}
      - name: Cleanup Docker containers
        if: always()
        run: |
          cd e2e
          docker compose -f docker-compose.test.yaml down -v || true
          docker system prune -f || true
      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-${{ matrix.testcase }}-test-logs
          path: e2e/logs/
          retention-days: 7

  summary:
    runs-on: ubuntu-latest
    needs: e2e
    if: always()
    steps:
      - run: |
          echo "E2E Test Results Summary:"
          echo "========================="
          echo "Key Generation Tests: ${{ needs.e2e.outputs['0'].result }}"
          echo "Signing Tests: ${{ needs.e2e.outputs['1'].result }}"
          echo "Resharing Tests: ${{ needs.e2e.outputs['2'].result }}"
          if [[ "${{ needs.e2e.outputs['0'].result }}" != "success" || "${{ needs.e2e.outputs['1'].result }}" != "success" || "${{ needs.e2e.outputs['2'].result }}" != "success" ]]; then
            echo "❌ One or more E2E tests failed"
            exit 1
          else
            echo "✅ All E2E tests passed successfully"
          fi
